merged_ts <- na.omit(merged_ts)
merged_ts <- merged_ts[1:500,]
View(ppi_cpi)
merged_ts <- xts(merged_ts[, -1], merged_ts$DATE)
View(merged_ts)
View(merged_ts)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dGOLD <- diff.xts(merged_ts$GOLD)
plot(merged_ts$OIL,
main = 'Oil vs gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
testdf2(variable = merged_ts$OIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
View(merged_ts)
testdf2(variable = merged_ts$dOIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
dataset1 <- read.csv('Aurum.csv')
dataset2 <- read.csv('petrol.csv')
View(dataset2)
View(dataset1)
View(dataset2)
View(dataset1)
colnames(dataset1) <- c('DATE', 'GOLD')
colnames(dataset2) <- c('DATE', 'OIL')
dataset1$DATE <- as.Date(dataset1$DATE, format = "%Y-%m-%d")
dataset2$DATE <- as.Date(dataset2$DATE,  format = "%Y-%m-%d")
merged_ts <- merge(dataset1, dataset2, by = "DATE", all = TRUE)
merged_ts$OIL <- as.numeric(merged_ts$OIL)
merged_ts$GOLD <- as.numeric(merged_ts$GOLD)
merged_ts <- na.omit(merged_ts)
View(merged_ts)
merged_ts <- xts(merged_ts[, -1], merged_ts$DATE)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dGOLD <- diff.xts(merged_ts$GOLD)
View(merged_ts)
plot(merged_ts$OIL,
main = 'Oil vs gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
testdf2(variable = merged_ts$OIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dOIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$GOLD, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dGOLD, test.type = "nc",
max.augmentations = 12, max.order = 12)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
View(merged_ts)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 5, max.order = 5)
length(residuals(model.coint))
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 4, max.order = 4)
# Estimating cointegrating vector
model.coint <- lm(cpi~ppi, data = ppi_cpi)
summary(model.coint)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 5, max.order = 5)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="c",
max.augmentations = 5, max.order = 5)
length(residuals(model.coint))
setwd("C:\\Users\\mraer\\Desktop\\UW\\Semester-2\\Advanced Econometrics\\New_Eco")
Sys.setenv(LANG = "en")
library(xts)
library(lmtest) # for BG test
library(fBasics) # e.g. basicStats()
library(urca) # for DF tests, also Johansen test
#library(MSBVAR)
library("lmtest")
library(ggplot2)
# lets load additional function prepared by the lecturer
source("function_testdf2.R")
dataset1 <- read.csv('Aurum.csv')
dataset2 <- read.csv('petrol.csv')
colnames(dataset1) <- c('DATE', 'GOLD')
colnames(dataset2) <- c('DATE', 'OIL')
dataset1$DATE <- as.Date(dataset1$DATE, format = "%Y-%m-%d")
dataset2$DATE <- as.Date(dataset2$DATE,  format = "%Y-%m-%d")
merged_ts <- merge(dataset1, dataset2, by = "DATE", all = TRUE)
merged_ts$OIL <- as.numeric(merged_ts$OIL)
merged_ts$GOLD <- as.numeric(merged_ts$GOLD)
merged_ts <- na.omit(merged_ts)
merged_ts <- xts(merged_ts[, -1], merged_ts$DATE)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dGOLD <- diff.xts(merged_ts$GOLD)
plot(merged_ts$OIL,
main = 'Oil vs gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
testdf2(variable = merged_ts$OIL, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dOIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$GOLD, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dGOLD, test.type = "nc",
max.augmentations = 12, max.order = 12)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="c",
max.augmentations = 5, max.order = 5)
length(residuals(model.coint))
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="c",
max.augmentations = 9, max.order = 9)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
length(residuals(model.coint))
length(residuals(model.coint))
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
merged_ts$lresid <- lag.xts(residuals(model.coint))
View(merged_ts)
View(merged_ts)
model.ecm <- lm(dOIL~dGOLD + lresid -1, data = merged_ts)
summary(model.ecm)
###########################################################################
#		Advanced Econometrics                                                 #
#   Spring semester                                                       #
#   dr Marcin Chlebus, dr Rafał Woźniak                                   #
#   University of Warsaw, Faculty of Economic Sciences                    #
#                                                                         #
#   Materials based on dr Piotr Wojcik Time Series Analysis for QF        #
#                                                                         #
#                 Lab 09: Introduction to TSA                             #
#                                                                         #
###########################################################################
###########################################################################
# 1. Set up R  environment                                                #
###########################################################################
# installing the library
# (done once on particular computer in particular R version)
# install.packages("zoo")
# install.packages("xts")
# loading the library into memory (done once in R session,
# when it is needed)
# lets install needed packages
library(zoo)
library(xts)
Sys.setlocale("LC_ALL", "English")
install.packages("plm")
install.packages("Formula")
install.packages("stargazer")
setwd("C:\\Users\\mraer\\Desktop\\UW\\Semester-2\\Advanced Econometrics\\Lab\\AE02 - Panel")
Sys.setenv(LANG = "en")
options(scipen=999)
library("MASS")
library("sandwich")
library("zoo")
library("car")
library("lmtest")
library("Formula")
library("plm")
library("stargazer")
library("aod")
traffic = read.csv(file="traffic.csv", sep=",", header=TRUE)
traffic %>% tibble() %>% dplyr::select(fatal,beertax,spircons,unrate,perincK,state,year)
fixed <-plm(fatal~beertax+spircons+unrate+perincK, data=traffic, index=c("state", "year"), model="within")
summary(fixed)
fixef(fixed)
ols<-lm(fatal~beertax+spircons+unrate+perincK, data=traffic)
summary(ols)
# tests for poolability
pFtest(fixed, ols)
# Testing for serial correlation
pbgtest(fixed)
# Testing for heteroskedasticity
bptest(fatal~beertax+spircons+unrate+perincK, data=traffic, studentize=T)
# Controlling for heteroskedasticity and autocorrelation:
coeftest(fixed, vcov.=vcovHC(fixed, method="white1", type="HC0", cluster="group"))
rice = read.csv(file="rice.csv", sep=",", header=TRUE)
random <-plm(prod~area+labor+fert, data=rice,
index=c("firm", "year"), model="random")
summary(random)
fixed <-plm(prod~area+labor+fert, data=rice,
index=c("firm", "year"), model="within")
summary(fixed)
fixed.time <-plm(prod~area+labor+fert+factor(year), data=rice,
index=c("firm", "year"), model="within")
summary(fixed.time)
OLS <-plm(prod~area+labor+fert, data=rice,
index=c("firm", "year"), model="pooling")
summary(OLS)
#hausmann test
phtest(fixed, random)
#individual effects for random effects?
plmtest(OLS, type=c("bp"))
#individual effects for fixed effects?
pFtest(fixed, OLS)
#test for time effects
pFtest(fixed.time,fixed)
plmtest(fixed, c("time"), type=("bp"))
# Testing for serial correlation
pbgtest(random)
# Testing for heteroskedasticity
bptest(fatal~beertax+spircons+unrate+perincK, data=traffic, studentize=TRUE)
crime.all = read.csv(file="crime.csv", header=TRUE, sep=",")
crime.all = read.csv(file="crime.csv", header=TRUE, sep=",")
setwd("C:\\Users\\mraer\\Desktop\\UW\\Semester-2\\Advanced Econometrics\\New_Eco")
Sys.setenv(LANG = "en")
library(xts)
library(lmtest) # for BG test
library(fBasics) # e.g. basicStats()
library(urca) # for DF tests, also Johansen test
#library(MSBVAR)
library("lmtest")
library(ggplot2)
# lets load additional function prepared by the lecturer
source("function_testdf2.R")
dataset1 <- read.csv('Aurum.csv')
dataset2 <- read.csv('petrol.csv')
colnames(dataset1) <- c('DATE', 'GOLD')
colnames(dataset2) <- c('DATE', 'OIL')
dataset1$DATE <- as.Date(dataset1$DATE, format = "%Y-%m-%d")
dataset2$DATE <- as.Date(dataset2$DATE,  format = "%Y-%m-%d")
merged_ts <- merge(dataset1, dataset2, by = "DATE", all = TRUE)
merged_ts$OIL <- as.numeric(merged_ts$OIL)
merged_ts$GOLD <- as.numeric(merged_ts$GOLD)
merged_ts <- na.omit(merged_ts)
merged_ts <- xts(merged_ts[, -1], merged_ts$DATE)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dGOLD <- diff.xts(merged_ts$GOLD)
plot(merged_ts$OIL,
main = 'Oil vs gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
testdf2(variable = merged_ts$OIL, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dOIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$GOLD, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dGOLD, test.type = "nc",
max.augmentations = 12, max.order = 12)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
model.coint <- lm(GOLD~OIL, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
length(residuals(model.coint)) #=234
merged_ts$lresid <- lag.xts(residuals(model.coint))
model.ecm <- lm(dOIL~dGOLD + lresid -1, data = merged_ts)
summary(model.ecm)
names(merged_ts)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 3)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 4)
# Checking the other way:
grangertest(x=merged_ts$dGOLD, y=merged_ts$dOIL, order = 3)
grangertest(x=merged_ts$dGOLD, y=merged_ts$dOIL, order = 4)
install.packages("lmtest")
install.packages("lmtest")
setwd("C:\\Users\\mraer\\Desktop\\UW\\Semester-2\\Advanced Econometrics\\New_Eco")
Sys.setenv(LANG = "en")
library(xts)
library(lmtest) # for BG test
library(fBasics) # e.g. basicStats()
library(urca) # for DF tests, also Johansen test
#library(MSBVAR)
library("lmtest")
library(ggplot2)
# lets load additional function prepared by the lecturer
source("function_testdf2.R")
dataset1 <- read.csv('Aurum.csv')
dataset2 <- read.csv('petrol.csv')
colnames(dataset1) <- c('DATE', 'GOLD')
colnames(dataset2) <- c('DATE', 'OIL')
dataset1$DATE <- as.Date(dataset1$DATE, format = "%Y-%m-%d")
dataset2$DATE <- as.Date(dataset2$DATE,  format = "%Y-%m-%d")
merged_ts <- merge(dataset1, dataset2, by = "DATE", all = TRUE)
merged_ts$OIL <- as.numeric(merged_ts$OIL)
merged_ts$GOLD <- as.numeric(merged_ts$GOLD)
merged_ts <- na.omit(merged_ts)
merged_ts <- xts(merged_ts[, -1], merged_ts$DATE)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dGOLD <- diff.xts(merged_ts$GOLD)
plot(merged_ts$OIL,
main = 'Oil vs gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
testdf2(variable = merged_ts$OIL, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dOIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$GOLD, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dGOLD, test.type = "nc",
max.augmentations = 12, max.order = 12)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
length(residuals(model.coint)) #=234
merged_ts$lresid <- lag.xts(residuals(model.coint))
model.ecm <- lm(dOIL~dGOLD + lresid -1, data = merged_ts)
summary(model.ecm)
names(merged_ts)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 3)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 4)
# Checking the other way:
grangertest(x=merged_ts$dGOLD, y=merged_ts$dOIL, order = 3)
grangertest(x=merged_ts$dGOLD, y=merged_ts$dOIL, order = 4)
# Now at Lag3, Price of GOLD  is helpful to explain the model Price of OIL. So Price of GOLD is a cause to Price of OIL
################### Ramsey Rest TEST:
resettest(model.coint, power = 2:3, type="fitted")
resettest(model.coint, power = 2, type="fitted")
resettest(model.coint, power = 3, type="fitted")
resettest(model.coint, power = 2, type="fitted")
bptest(model.coint, studentize=TRUE)
bptest(model.coint)
, studentize=TRUE
bptest(model.coint, studentize=TRUE)
bptest(residuals(model.coint), studentize=TRUE)
bptest(residuals(model.coint), studentize=TRUE)
bptest(residuals(model.coint))
View(model.coint)
bptest(model.coint$residuals)
bptest(model.coint, order(2))
bptest(model.coint, studentize=TRUE)
bptest(model.coint, order=3)
bptest(model.coint, studentize=TRUE)
bgtest(model.coint, order = 1)
View(merged_ts)
setwd("C:\\Users\\mraer\\Desktop\\UW\\Semester-2\\Advanced Econometrics\\New_Eco")
Sys.setenv(LANG = "en")
library(xts)
library(lmtest)
library(fBasics)
library(urca)
library("lmtest")
library(ggplot2)
source("function_testdf2.R")
dataset1 <- read.csv('Aurum.csv')
dataset2 <- read.csv('petrol.csv')
View(dataset1)
View(dataset2)
colnames(dataset1) <- c('DATE', 'GOLD')
colnames(dataset2) <- c('DATE', 'OIL')
dataset1$DATE <- as.Date(dataset1$DATE, format = "%Y-%m-%d")
dataset2$DATE <- as.Date(dataset2$DATE,  format = "%Y-%m-%d")
dataset1$DATE <- as.Date(dataset1$DATE, format = "%Y-%m-%d")
dataset2$DATE <- as.Date(dataset2$DATE,  format = "%Y-%m-%d")
merged_ts <- merge(dataset1, dataset2, by = "DATE", all = TRUE)
merged_ts$OIL <- as.numeric(merged_ts$OIL)
merged_ts$GOLD <- as.numeric(merged_ts$GOLD)
merged_ts <- na.omit(merged_ts)
View(merged_ts)
merged_ts <- na.omit(merged_ts)
merged_ts <- xts(merged_ts[, -1], merged_ts$DATE)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dGOLD <- diff.xts(merged_ts$GOLD)
View(merged_ts)
plot(merged_ts$OIL,
main = 'Oil vs gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
legend("topleft", c("Oil", "Gold"),
col = c("red", "blue"), lty = 1)
plot(merged_ts$OIL,
main = 'Oil vs gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
legend("topleft", c("Oil", "Gold"),
col = c("red", "blue"), lty = 1)
plot(merged_ts$OIL,
main = 'Oil vs Gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
testdf2(variable = merged_ts$GOLD, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$OIL, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dOIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$GOLD, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dGOLD, test.type = "nc",
max.augmentations = 12, max.order = 12)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
merged_ts$lresid <- lag.xts(residuals(model.coint))
model.ecm <- lm(dOIL~dGOLD + lresid -1, data = merged_ts)
summary(model.ecm)
merged_ts$lresid <- lag.xts(residuals(model.coint))
model.ecm <- lm(dOIL~dGOLD + lresid -1, data = merged_ts)
summary(model.ecm)
names(merged_ts)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 3)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 4)
resettest(model.coint, power = 2, type="fitted")
bptest(model.coint, studentize=TRUE)
bgtest(model.coint, order = 1)
dataset1 <- read.csv('Aurum.csv')
dataset2 <- read.csv('petrol.csv')
colnames(dataset1) <- c('DATE', 'GOLD')
colnames(dataset2) <- c('DATE', 'OIL')
dataset1$DATE <- as.Date(dataset1$DATE, format = "%Y-%m-%d")
dataset2$DATE <- as.Date(dataset2$DATE,  format = "%Y-%m-%d")
merged_ts <- merge(dataset1, dataset2, by = "DATE", all = TRUE)
merged_ts$OIL <- as.numeric(merged_ts$OIL)
merged_ts$GOLD <- as.numeric(merged_ts$GOLD)
merged_ts <- na.omit(merged_ts)
merged_ts <- xts(merged_ts[, -1], merged_ts$DATE)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dGOLD <- diff.xts(merged_ts$GOLD)
plot(merged_ts$OIL,
main = 'Oil vs Gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
legend("topleft", c("Oil", "Gold"),
col = c("red", "blue"), lty = 1)
testdf2(variable = merged_ts$OIL, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dOIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$GOLD, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dGOLD, test.type = "nc",
max.augmentations = 12, max.order = 12)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
merged_ts$lresid <- lag.xts(residuals(model.coint))
model.ecm <- lm(dOIL~dGOLD + lresid -1, data = merged_ts)
summary(model.ecm)
names(merged_ts)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 3)
merged_ts$lresid <- lag.xts(residuals(model.coint))
model.ecm <- lm(dOIL~dGOLD + lresid -1, data = merged_ts)
summary(model.ecm)
names(merged_ts)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 3)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 4)
# Checking the other way:
grangertest(x=merged_ts$dGOLD, y=merged_ts$dOIL, order = 3)
grangertest(x=merged_ts$dGOLD, y=merged_ts$dOIL, order = 4)
resettest(model.coint, power = 2, type="fitted")
bptest(model.coint, studentize=TRUE)
bgtest(model.coint, order = 1)
setwd("C:\\Users\\mraer\\Desktop\\UW\\Semester-2\\Advanced Econometrics\\Econometrics")
Sys.setenv(LANG = "en")
library(xts)
library(lmtest)
library(fBasics)
library(urca)
library("lmtest")
library(ggplot2)
source("function_testdf2.R")
dataset1 <- read.csv('Aurum.csv')
dataset2 <- read.csv('petrol.csv')
colnames(dataset1) <- c('DATE', 'GOLD')
colnames(dataset2) <- c('DATE', 'OIL')
dataset1$DATE <- as.Date(dataset1$DATE, format = "%Y-%m-%d")
dataset2$DATE <- as.Date(dataset2$DATE,  format = "%Y-%m-%d")
merged_ts <- merge(dataset1, dataset2, by = "DATE", all = TRUE)
merged_ts$OIL <- as.numeric(merged_ts$OIL)
merged_ts$GOLD <- as.numeric(merged_ts$GOLD)
merged_ts <- na.omit(merged_ts)
merged_ts <- xts(merged_ts[, -1], merged_ts$DATE)
merged_ts$dOIL <- diff.xts(merged_ts$OIL)
merged_ts$dGOLD <- diff.xts(merged_ts$GOLD)
plot(merged_ts$OIL,
main = 'Oil vs Gold indicies', lwd = 0.7, col = "red")
lines(merged_ts$GOLD, col = "blue", lwd = 0.5)
legend("topleft", c("Oil", "Gold"),
col = c("red", "blue"), lty = 1)
testdf2(variable = merged_ts$OIL, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dOIL, test.type = "nc",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$GOLD, test.type = "c",
max.augmentations = 12, max.order = 12)
testdf2(variable = merged_ts$dGOLD, test.type = "nc",
max.augmentations = 12, max.order = 12)
model.coint <- lm(OIL~GOLD, data = merged_ts)
summary(model.coint)
testdf2(variable = residuals(model.coint), test.type="nc",
max.augmentations = 9, max.order = 9)
length(residuals(model.coint)) #=234
merged_ts$lresid <- lag.xts(residuals(model.coint))
model.ecm <- lm(dOIL~dGOLD + lresid -1, data = merged_ts)
summary(model.ecm)
names(merged_ts)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 3)
grangertest(x=merged_ts$dOIL, y=merged_ts$dGOLD, order = 4)
# Checking the other way:
grangertest(x=merged_ts$dGOLD, y=merged_ts$dOIL, order = 3)
grangertest(x=merged_ts$dGOLD, y=merged_ts$dOIL, order = 4)
resettest(model.coint, power = 2, type="fitted")
bptest(model.coint, studentize=TRUE)
bgtest(model.coint, order = 1)
